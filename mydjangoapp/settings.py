import os
from pathlib import Path
import dj_database_url

# Base directory
BASE_DIR = Path(__file__).resolve().parent.parent

# Secrets & debug
SECRET_KEY = os.getenv('SECRET_KEY', 'django-insecure-CHANGE_ME')
DEBUG = os.getenv('DEBUG', '1') == '1'

ALLOWED_HOSTS = os.getenv('ALLOWED_HOSTS', '127.0.0.1,localhost').split(',')

# Applications
INSTALLED_APPS = [
    'jazzmin',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'compressor',
    'crispy_forms',
    'crispy_tailwind',
    'blog',
    'users',
    'sweetify',
]

# Middleware
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

# URL Configuration
ROOT_URLCONF = 'mydjangoapp.urls'

# Templates
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'mydjangoapp.wsgi.application'

# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

# Replace the SQLite DATABASES configuration with PostgreSQL:
DATABASES = {
    'default': dj_database_url.config(
        default=os.environ.get('DATABASE_URL'),
        conn_max_age=600,
        conn_health_checks=True,
    )
}


# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': BASE_DIR / 'db.sqlite3',
#     }
# }


# Password validation
AUTH_PASSWORD_VALIDATORS = [
    {'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator'},
    {'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator'},
    {'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator'},
    {'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator'},
]

# Internationalization
LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_TZ = True

# Static files (CSS, JavaScript, Images)
STATIC_URL = '/static/'
STATIC_ROOT = BASE_DIR / 'staticfiles'
STATICFILES_DIRS = [BASE_DIR / 'static']

if not DEBUG:
    STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'

# Compression
django_compressor = True
COMPRESS_ENABLED = True
COMPRESS_ROOT = STATIC_ROOT
STATICFILES_FINDERS = [
    'django.contrib.staticfiles.finders.FileSystemFinder',
    'django.contrib.staticfiles.finders.AppDirectoriesFinder',
    'compressor.finders.CompressorFinder',
]

# Media files (LOCAL)
MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'

# Jazzmin configuration
JAZZMIN_SETTINGS = {
    'site_title': 'Blog Admin',
    'site_header': 'Blog Admin',
    'site_brand': 'Blog Admin',
    'welcome_sign': 'Welcome to the Blog Admin',
    'copyright': 'Amazing Blog of Gold 2024',
    'topmenu_links': [
        {'app': 'users'},
        {'app': 'blog'},
        {'name': 'Visit Site', 'url': 'http://127.0.0.1:8000', 'new_window': True},
    ],
    'show_ui_builder': True,
    'icons': {
        'auth': 'fas fa-users-cog',
        'auth.user': 'fas fa-user',
        'auth.group': 'fas fa-users',
        'blog.Category': 'fas fa-folder',
        'blog.Post': 'fas fa-newspaper',
        'blog.Comment': 'fas fa-comment',
        'blog.Tag': 'fas fa-tags',
        'blog.Like': 'fas fa-thumbs-up',
    },
    'default_icon_parents': 'fas fa-chevron-circle-right',
    'default_icon_children': 'fas fa-circle',
    'changeform_format': 'collapsible',
    'related_modal_active': True,
}

JAZZMIN_UI_TWEAKS = {
    'navbar_small_text': False,
    'footer_small_text': False,
    'body_small_text': False,
    'brand_small_text': False,
    'brand_colour': False,
    'accent': 'accent-primary',
    'navbar': 'navbar-dark',
    'layout_boxed': False,
    'sidebar': 'sidebar-dark-primary',
    'theme': 'superhero',
    'dark_mode_theme': 'superhero',
    'button_classes': {
        'primary': 'btn-primary',
        'secondary': 'btn-secondary',
        'info': 'btn-info',
        'warning': 'btn-warning',
        'danger': 'btn-danger',
        'success': 'btn-success',
    },
}








# """
# Django settings for mydjangoapp project.

# Generated by 'django-admin startproject' using Django 5.1.2.

# For more information on this file, see
# https://docs.djangoproject.com/en/5.1/topics/settings/

# For the full list of settings and their values, see
# https://docs.djangoproject.com/en/5.1/ref/settings/
# """

# from pathlib import Path
# import os
# import dj_database_url

# # Ensure BASE_DIR is a Path object
# BASE_DIR = Path(__file__).resolve().parent.parent  # ✅ Correct definition

# STATIC_URL = '/static/'

# # Define STATIC_ROOT globally
# STATIC_ROOT = BASE_DIR / 'staticfiles'  # ✅ Use Path object

# # SECURITY WARNING: don't run with debug turned on in production!
# DEBUG = True

# if not DEBUG:
#     # Enable WhiteNoise for production
#     STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'

# # Additional locations of static files
# STATICFILES_DIRS = [
#     BASE_DIR / 'static',  # ✅ Use Path object
# ]

# # COMPRESS_ROOT should reference STATIC_ROOT safely
# COMPRESS_ROOT = STATIC_ROOT

# # Quick-start development settings - unsuitable for production
# SECRET_KEY = 'django-insecure-6&9(mqw9eikncc%x-@+(y1_$&-$-c9oo4w9%y7n6qx%rg7#cq6'

# EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'  # During development

# ALLOWED_HOSTS = ['mydjangoapp-nk6z.onrender.com', '127.0.0.1', 'localhost']

# # MEDIA_URL = '/media/'
# # MEDIA_ROOT = BASE_DIR / 'media'  # ✅ Use Path object

# INSTALLED_APPS = [
#     'jazzmin',
#     'django.contrib.admin',
#     'django.contrib.auth',
#     'django.contrib.contenttypes',
#     'django.contrib.sessions',
#     'django.contrib.messages',
#     'django.contrib.staticfiles',
#     'compressor',
#     'crispy_forms',
#     'crispy_tailwind',
#     'blog',
#     'users',
#     'sweetify',
#     'storages',
    
# ]

# # Compression settings
# COMPRESS_ENABLED = True
# COMPRESS_ROOT = STATIC_ROOT
# STATICFILES_FINDERS = [
#     'django.contrib.staticfiles.finders.FileSystemFinder',
#     'django.contrib.staticfiles.finders.AppDirectoriesFinder',
#     'compressor.finders.CompressorFinder',
# ]

# MIDDLEWARE = [
#     'django.middleware.security.SecurityMiddleware',
#     'whitenoise.middleware.WhiteNoiseMiddleware',
#     'django.contrib.sessions.middleware.SessionMiddleware',
#     'django.middleware.common.CommonMiddleware',
#     'django.middleware.csrf.CsrfViewMiddleware',
#     'django.contrib.auth.middleware.AuthenticationMiddleware',
#     'django.contrib.messages.middleware.MessageMiddleware',
#     'django.middleware.clickjacking.XFrameOptionsMiddleware',
# ]

# ROOT_URLCONF = 'mydjangoapp.urls'

# TEMPLATES = [
#     {
#         'BACKEND': 'django.template.backends.django.DjangoTemplates',
#         'DIRS': [BASE_DIR / 'templates'],  # ✅ Works correctly with Path object
#         'APP_DIRS': True,
#         'OPTIONS': {
#             'context_processors': [
#                 'django.template.context_processors.debug',
#                 'django.template.context_processors.request',
#                 'django.contrib.auth.context_processors.auth',
#                 'django.contrib.messages.context_processors.messages',
#             ],
#         },
#     },
# ]

# WSGI_APPLICATION = 'mydjangoapp.wsgi.application'



# # Database
# # https://docs.djangoproject.com/en/5.1/ref/settings/#databases

# # Replace the SQLite DATABASES configuration with PostgreSQL:
# DATABASES = {
#     'default': dj_database_url.config(
#         default=os.environ.get('DATABASE_URL'),
#         conn_max_age=600,
#         conn_health_checks=True,
#     )
# }


# # DATABASES = {
# #     'default': {
# #         'ENGINE': 'django.db.backends.sqlite3',
# #         'NAME': BASE_DIR / 'db.sqlite3',
# #     }
# # }


# # Password validation
# # https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

# AUTH_PASSWORD_VALIDATORS = [
#     {
#         'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
#     },
#     {
#         'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
#     },
#     {
#         'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
#     },
#     {
#         'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
#     },
# ]


# # Internationalization
# # https://docs.djangoproject.com/en/5.1/topics/i18n/

# LANGUAGE_CODE = 'en-us'

# TIME_ZONE = 'UTC'

# USE_I18N = True

# USE_TZ = True


# # Default primary key field type
# # https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

# DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'



# STORAGES = {
#         "staticfiles": {
#             "BACKEND": "django.contrib.staticfiles.storage.StaticFilesStorage",
#         },
#         "default": {
#             "BACKEND": "storages.backends.s3boto3.S3Boto3Storage",
#             "OPTIONS": {
#                 "access_key": os.environ.get("B2_APPLICATION_KEY_ID"),
#                 "secret_key": os.environ.get("B2_APPLICATION_KEY"),
#                 "bucket_name": os.environ.get("B2_BUCKET_NAME"),
#                 "region_name": os.environ.get("B2_REGION_NAME", "us-west-004"),
#                 "endpoint_url": f"https://s3.{os.environ.get('B2_REGION_NAME', 'us-west-004')}.backblazeb2.com",
#                 # Remove ACL settings since B2 does not support object-level ACLs
#             },
#         },
#     }

# # Construct MEDIA_URL using Backblaze's file serving domain
# MEDIA_URL = f"https://f000.backblazeb2.com/file/{os.environ.get('B2_BUCKET_NAME')}/"



# JAZZMIN_SETTINGS = {
#      # title of the window (Will default to current_admin_site.site_title if absent or None)
#     "site_title": "Blog Admin",
    
    
#      # Title on the login screen (19 chars max) (defaults to current_admin_site.site_header if absent or None)
#     "site_header": "Blog Admin",

#     # Title on the brand (19 chars max) (defaults to current_admin_site.site_header if absent or None)
#     "site_brand": "Blog Admin",
    
#       # Welcome text on the login screen
#     "welcome_sign": "Welcome to the Blog Admin",
    
    
#       # Copyright on the footer
#     "copyright": "Amazing bLog of gold 2024",
    
    
#     #  # Logo to use for your site, must be present in static files, used for brand on top left
#     # "site_logo": "books/img/logo.png",

#     # # Logo to use for your site, must be present in static files, used for login form logo (defaults to site_logo)
#     # "login_logo": "books/img/loginlogo.png",

#     # # Logo to use for login form in dark themes (defaults to login_logo)
#     # "login_logo_dark": None,

#     # # CSS classes that are applied to the logo above
#     # "site_logo_classes": "custom-admin-logo", 
    
#     # "custom_css": "css/admin_custom.css",
 
#     # # Relative path to a favicon for your site, will default to site_logo if absent (ideally 32x32 px)
#     # "site_icon": None,
    
    
#      # Links to put along the top menu
#     "topmenu_links": [
#           # App with dropdown menu to all its models pages (Permissions checked against models)
#         {"app": "users"},
#         {"app": "blog"},
#         {'name': 'visit site', 'url': 'http://127.0.0.1:8000', 'new_window': True},
#     ],
    
    
#      # List of model admins to search from the search bar, search bar omitted if excluded
#     # If you want to use a single search field you dont need to use a list, you can use a simple string 
#     # "search_model": ["auth.User", "catalog.Book"],
    
    
#      "show_ui_builder": True,
     
     
     
     
#       # Custom icons for side menu apps/models See https://fontawesome.com/icons?d=gallery&m=free&v=5.0.0,5.0.1,5.0.10,5.0.11,5.0.12,5.0.13,5.0.2,5.0.3,5.0.4,5.0.5,5.0.6,5.0.7,5.0.8,5.0.9,5.1.0,5.1.1,5.2.0,5.3.0,5.3.1,5.4.0,5.4.1,5.4.2,5.13.0,5.12.0,5.11.2,5.11.1,5.10.0,5.9.0,5.8.2,5.8.1,5.7.2,5.7.1,5.7.0,5.6.3,5.5.0,5.4.2
#     # for the full list of 5.13.0 free icon classes
#     "icons": {
#         "auth": "fas fa-users-cog",
#         "auth.user": "fas fa-user",
#         "auth.Group": "fas fa-users",
        
        
#         "blog.Category": "fas fa-folder",
#         "blog.Post": "fas fa-newspaper",
#         "blog.Comment": "fas fa-comment",
#         "blog.Tag": "fas fa-tags",
#         "blog.Like": "fas fa-thumbs-up", 
        
#     },
#     # Icons that are used when one is not manually specified
#     "default_icon_parents": "fas fa-chevron-circle-right",
#     "default_icon_children": "fas fa-circle",
    
#      ###############
#     # Change view #
#     ###############
#     # Render out the change view as a single form, or in tabs, current options are
#     # - single
#     # - horizontal_tabs (default)
#     # - vertical_tabs
#     # - collapsible
#     # - carousel
#     "changeform_format": "collapsible",
    
    
#     # "changeform_format": "horizontal_tabs",
#     # # override change forms on a per modeladmin basis
#     # "changeform_format_overrides": {"auth.user": "collapsible", "auth.group": "vertical_tabs"},
    
    
#     "related_modal_active": True
# }






# JAZZMIN_UI_TWEAKS = {
#     "navbar_small_text": False,
#     "footer_small_text": False,
#     "body_small_text": False,
#     "brand_small_text": False,
#     "brand_colour": False,
#     "accent": "accent-primary",
#     "navbar": "navbar-dark",
#     "no_navbar_border": False,
#     "navbar_fixed": False,
#     "layout_boxed": False,
#     "footer_fixed": False,
#     "sidebar_fixed": False,
#     "sidebar": "sidebar-dark-primary",
#     "sidebar_nav_small_text": False,
#     "sidebar_disable_expand": False,
#     "sidebar_nav_child_indent": False,
#     "sidebar_nav_compact_style": False,
#     "sidebar_nav_legacy_style": False,
#     "sidebar_nav_flat_style": False,
#     "theme": "superhero",
#     "dark_mode_theme": "superhero",
#     "button_classes": {
#         "primary": "btn-primary",
#         "secondary": "btn-secondary",
#         "info": "btn-info",
#         "warning": "btn-warning",
#         "danger": "btn-danger",
#         "success": "btn-success"
#     }
# }


# # ChillSam.pythonanywhere.com





